// @generated by protoc-gen-es v2.2.3 with parameter "target=js+dts,import_extension=none,json_types=true"
// @generated from file runme/runner/v2/runner.proto (package runme.runner.v2, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv1";
import { file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import { file_runme_runner_v2_config } from "./config_pb";

/**
 * Describes the file runme/runner/v2/runner.proto.
 */
export const file_runme_runner_v2_runner = /*@__PURE__*/
  fileDesc("ChxydW5tZS9ydW5uZXIvdjIvcnVubmVyLnByb3RvEg9ydW5tZS5ydW5uZXIudjIiLwoHUHJvamVjdBIMCgRyb290GAEgASgJEhYKDmVudl9sb2FkX29yZGVyGAIgAygJIo0BCgdTZXNzaW9uEgoKAmlkGAEgASgJEgsKA2VudhgCIAMoCRI4CghtZXRhZGF0YRgDIAMoCzImLnJ1bm1lLnJ1bm5lci52Mi5TZXNzaW9uLk1ldGFkYXRhRW50cnkaLwoNTWV0YWRhdGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIrIFChRDcmVhdGVTZXNzaW9uUmVxdWVzdBJFCghtZXRhZGF0YRgBIAMoCzIzLnJ1bm1lLnJ1bm5lci52Mi5DcmVhdGVTZXNzaW9uUmVxdWVzdC5NZXRhZGF0YUVudHJ5EgsKA2VudhgCIAMoCRIuCgdwcm9qZWN0GAMgASgLMhgucnVubWUucnVubmVyLnYyLlByb2plY3RIAIgBARJBCg5lbnZfc3RvcmVfdHlwZRgEIAEoDjIkLnJ1bm1lLnJ1bm5lci52Mi5TZXNzaW9uRW52U3RvcmVUeXBlSAGIAQESPAoGY29uZmlnGAUgASgLMiwucnVubWUucnVubmVyLnYyLkNyZWF0ZVNlc3Npb25SZXF1ZXN0LkNvbmZpZxovCg1NZXRhZGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEaxAIKBkNvbmZpZxJBCg5lbnZfc3RvcmVfdHlwZRgBIAEoDjIkLnJ1bm1lLnJ1bm5lci52Mi5TZXNzaW9uRW52U3RvcmVUeXBlSACIAQESYwoRZW52X3N0b3JlX3NlZWRpbmcYAiABKA4yQy5ydW5tZS5ydW5uZXIudjIuQ3JlYXRlU2Vzc2lvblJlcXVlc3QuQ29uZmlnLlNlc3Npb25FbnZTdG9yZVNlZWRpbmdIAYgBASJpChZTZXNzaW9uRW52U3RvcmVTZWVkaW5nEikKJVNFU1NJT05fRU5WX1NUT1JFX1NFRURJTkdfVU5TUEVDSUZJRUQQABIkCiBTRVNTSU9OX0VOVl9TVE9SRV9TRUVESU5HX1NZU1RFTRABQhEKD19lbnZfc3RvcmVfdHlwZUIUChJfZW52X3N0b3JlX3NlZWRpbmdCCgoIX3Byb2plY3RCEQoPX2Vudl9zdG9yZV90eXBlIkIKFUNyZWF0ZVNlc3Npb25SZXNwb25zZRIpCgdzZXNzaW9uGAEgASgLMhgucnVubWUucnVubmVyLnYyLlNlc3Npb24iHwoRR2V0U2Vzc2lvblJlcXVlc3QSCgoCaWQYASABKAkiPwoSR2V0U2Vzc2lvblJlc3BvbnNlEikKB3Nlc3Npb24YASABKAsyGC5ydW5tZS5ydW5uZXIudjIuU2Vzc2lvbiIVChNMaXN0U2Vzc2lvbnNSZXF1ZXN0IkIKFExpc3RTZXNzaW9uc1Jlc3BvbnNlEioKCHNlc3Npb25zGAEgAygLMhgucnVubWUucnVubmVyLnYyLlNlc3Npb24i4wEKFFVwZGF0ZVNlc3Npb25SZXF1ZXN0EgoKAmlkGAEgASgJEkUKCG1ldGFkYXRhGAIgAygLMjMucnVubWUucnVubmVyLnYyLlVwZGF0ZVNlc3Npb25SZXF1ZXN0Lk1ldGFkYXRhRW50cnkSCwoDZW52GAMgAygJEi4KB3Byb2plY3QYBCABKAsyGC5ydW5tZS5ydW5uZXIudjIuUHJvamVjdEgAiAEBGi8KDU1ldGFkYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4AUIKCghfcHJvamVjdCJCChVVcGRhdGVTZXNzaW9uUmVzcG9uc2USKQoHc2Vzc2lvbhgBIAEoCzIYLnJ1bm1lLnJ1bm5lci52Mi5TZXNzaW9uIiIKFERlbGV0ZVNlc3Npb25SZXF1ZXN0EgoKAmlkGAEgASgJIhcKFURlbGV0ZVNlc3Npb25SZXNwb25zZSI7CgdXaW5zaXplEgwKBHJvd3MYASABKA0SDAoEY29scxgCIAEoDRIJCgF4GAMgASgNEgkKAXkYBCABKA0i5QIKDkV4ZWN1dGVSZXF1ZXN0Ei4KBmNvbmZpZxgBIAEoCzIeLnJ1bm1lLnJ1bm5lci52Mi5Qcm9ncmFtQ29uZmlnEhIKCmlucHV0X2RhdGEYCCABKAwSKgoEc3RvcBgJIAEoDjIcLnJ1bm1lLnJ1bm5lci52Mi5FeGVjdXRlU3RvcBIuCgd3aW5zaXplGAogASgLMhgucnVubWUucnVubmVyLnYyLldpbnNpemVIAIgBARISCgpzZXNzaW9uX2lkGBQgASgJEjoKEHNlc3Npb25fc3RyYXRlZ3kYFSABKA4yIC5ydW5tZS5ydW5uZXIudjIuU2Vzc2lvblN0cmF0ZWd5Ei4KB3Byb2plY3QYFiABKAsyGC5ydW5tZS5ydW5uZXIudjIuUHJvamVjdEgBiAEBEhsKE3N0b3JlX3N0ZG91dF9pbl9lbnYYFyABKAhCCgoIX3dpbnNpemVCCgoIX3Byb2plY3QiqgEKD0V4ZWN1dGVSZXNwb25zZRIvCglleGl0X2NvZGUYASABKAsyHC5nb29nbGUucHJvdG9idWYuVUludDMyVmFsdWUSEwoLc3Rkb3V0X2RhdGEYAiABKAwSEwoLc3RkZXJyX2RhdGEYAyABKAwSKQoDcGlkGAQgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlVJbnQzMlZhbHVlEhEKCW1pbWVfdHlwZRgFIAEoCSIqChlSZXNvbHZlUHJvZ3JhbUNvbW1hbmRMaXN0Eg0KBWxpbmVzGAEgAygJIsAEChVSZXNvbHZlUHJvZ3JhbVJlcXVlc3QSPgoIY29tbWFuZHMYASABKAsyKi5ydW5tZS5ydW5uZXIudjIuUmVzb2x2ZVByb2dyYW1Db21tYW5kTGlzdEgAEhAKBnNjcmlwdBgCIAEoCUgAEjkKBG1vZGUYAyABKA4yKy5ydW5tZS5ydW5uZXIudjIuUmVzb2x2ZVByb2dyYW1SZXF1ZXN0Lk1vZGUSCwoDZW52GAQgAygJEhIKCnNlc3Npb25faWQYBSABKAkSOgoQc2Vzc2lvbl9zdHJhdGVneRgGIAEoDjIgLnJ1bm1lLnJ1bm5lci52Mi5TZXNzaW9uU3RyYXRlZ3kSLgoHcHJvamVjdBgHIAEoCzIYLnJ1bm1lLnJ1bm5lci52Mi5Qcm9qZWN0SAGIAQESEwoLbGFuZ3VhZ2VfaWQYCCABKAkSQwoJcmV0ZW50aW9uGAkgASgOMjAucnVubWUucnVubmVyLnYyLlJlc29sdmVQcm9ncmFtUmVxdWVzdC5SZXRlbnRpb24iRAoETW9kZRIUChBNT0RFX1VOU1BFQ0lGSUVEEAASEwoPTU9ERV9QUk9NUFRfQUxMEAESEQoNTU9ERV9TS0lQX0FMTBACIlcKCVJldGVudGlvbhIZChVSRVRFTlRJT05fVU5TUEVDSUZJRUQQABIXChNSRVRFTlRJT05fRklSU1RfUlVOEAESFgoSUkVURU5USU9OX0xBU1RfUlVOEAJCCAoGc291cmNlQgoKCF9wcm9qZWN0ItoDChZSZXNvbHZlUHJvZ3JhbVJlc3BvbnNlEg4KBnNjcmlwdBgBIAEoCRI8Cghjb21tYW5kcxgCIAEoCzIqLnJ1bm1lLnJ1bm5lci52Mi5SZXNvbHZlUHJvZ3JhbUNvbW1hbmRMaXN0Ej8KBHZhcnMYAyADKAsyMS5ydW5tZS5ydW5uZXIudjIuUmVzb2x2ZVByb2dyYW1SZXNwb25zZS5WYXJSZXN1bHQaiQEKCVZhclJlc3VsdBI+CgZzdGF0dXMYASABKA4yLi5ydW5tZS5ydW5uZXIudjIuUmVzb2x2ZVByb2dyYW1SZXNwb25zZS5TdGF0dXMSDAoEbmFtZRgCIAEoCRIWCg5vcmlnaW5hbF92YWx1ZRgDIAEoCRIWCg5yZXNvbHZlZF92YWx1ZRgEIAEoCSKkAQoGU3RhdHVzEhYKElNUQVRVU19VTlNQRUNJRklFRBAAEhMKD1NUQVRVU19SRVNPTFZFRBABEiIKHlNUQVRVU19VTlJFU09MVkVEX1dJVEhfTUVTU0FHRRACEiYKIlNUQVRVU19VTlJFU09MVkVEX1dJVEhfUExBQ0VIT0xERVIQAxIhCh1TVEFUVVNfVU5SRVNPTFZFRF9XSVRIX1NFQ1JFVBAEIkMKFk1vbml0b3JFbnZTdG9yZVJlcXVlc3QSKQoHc2Vzc2lvbhgBIAEoCzIYLnJ1bm1lLnJ1bm5lci52Mi5TZXNzaW9uIsIECh9Nb25pdG9yRW52U3RvcmVSZXNwb25zZVNuYXBzaG90EkoKBGVudnMYASADKAsyPC5ydW5tZS5ydW5uZXIudjIuTW9uaXRvckVudlN0b3JlUmVzcG9uc2VTbmFwc2hvdC5TbmFwc2hvdEVudhrOAgoLU25hcHNob3RFbnYSRwoGc3RhdHVzGAEgASgOMjcucnVubWUucnVubmVyLnYyLk1vbml0b3JFbnZTdG9yZVJlc3BvbnNlU25hcHNob3QuU3RhdHVzEgwKBG5hbWUYAiABKAkSEwoLZGVzY3JpcHRpb24YAyABKAkSDAoEc3BlYxgEIAEoCRITCgtpc19yZXF1aXJlZBgFIAEoCBIOCgZvcmlnaW4YBiABKAkSFgoOb3JpZ2luYWxfdmFsdWUYByABKAkSFgoOcmVzb2x2ZWRfdmFsdWUYCCABKAkSEwoLY3JlYXRlX3RpbWUYCSABKAkSEwoLdXBkYXRlX3RpbWUYCiABKAkSRgoGZXJyb3JzGAsgAygLMjYucnVubWUucnVubmVyLnYyLk1vbml0b3JFbnZTdG9yZVJlc3BvbnNlU25hcHNob3QuRXJyb3IaJgoFRXJyb3ISDAoEY29kZRgBIAEoDRIPCgdtZXNzYWdlGAIgASgJIloKBlN0YXR1cxIWChJTVEFUVVNfVU5TUEVDSUZJRUQQABISCg5TVEFUVVNfTElURVJBTBABEhEKDVNUQVRVU19ISURERU4QAhIRCg1TVEFUVVNfTUFTS0VEEAMimwEKF01vbml0b3JFbnZTdG9yZVJlc3BvbnNlEjIKBHR5cGUYASABKA4yJC5ydW5tZS5ydW5uZXIudjIuTW9uaXRvckVudlN0b3JlVHlwZRJECghzbmFwc2hvdBgCIAEoCzIwLnJ1bm1lLnJ1bm5lci52Mi5Nb25pdG9yRW52U3RvcmVSZXNwb25zZVNuYXBzaG90SABCBgoEZGF0YSpdChNTZXNzaW9uRW52U3RvcmVUeXBlEiYKIlNFU1NJT05fRU5WX1NUT1JFX1RZUEVfVU5TUEVDSUZJRUQQABIeChpTRVNTSU9OX0VOVl9TVE9SRV9UWVBFX09XTBABKl4KC0V4ZWN1dGVTdG9wEhwKGEVYRUNVVEVfU1RPUF9VTlNQRUNJRklFRBAAEhoKFkVYRUNVVEVfU1RPUF9JTlRFUlJVUFQQARIVChFFWEVDVVRFX1NUT1BfS0lMTBACKlUKD1Nlc3Npb25TdHJhdGVneRIgChxTRVNTSU9OX1NUUkFURUdZX1VOU1BFQ0lGSUVEEAASIAocU0VTU0lPTl9TVFJBVEVHWV9NT1NUX1JFQ0VOVBABKmIKE01vbml0b3JFbnZTdG9yZVR5cGUSJgoiTU9OSVRPUl9FTlZfU1RPUkVfVFlQRV9VTlNQRUNJRklFRBAAEiMKH01PTklUT1JfRU5WX1NUT1JFX1RZUEVfU05BUFNIT1QQATKQBgoNUnVubmVyU2VydmljZRJgCg1DcmVhdGVTZXNzaW9uEiUucnVubWUucnVubmVyLnYyLkNyZWF0ZVNlc3Npb25SZXF1ZXN0GiYucnVubWUucnVubmVyLnYyLkNyZWF0ZVNlc3Npb25SZXNwb25zZSIAElcKCkdldFNlc3Npb24SIi5ydW5tZS5ydW5uZXIudjIuR2V0U2Vzc2lvblJlcXVlc3QaIy5ydW5tZS5ydW5uZXIudjIuR2V0U2Vzc2lvblJlc3BvbnNlIgASXQoMTGlzdFNlc3Npb25zEiQucnVubWUucnVubmVyLnYyLkxpc3RTZXNzaW9uc1JlcXVlc3QaJS5ydW5tZS5ydW5uZXIudjIuTGlzdFNlc3Npb25zUmVzcG9uc2UiABJgCg1VcGRhdGVTZXNzaW9uEiUucnVubWUucnVubmVyLnYyLlVwZGF0ZVNlc3Npb25SZXF1ZXN0GiYucnVubWUucnVubmVyLnYyLlVwZGF0ZVNlc3Npb25SZXNwb25zZSIAEmAKDURlbGV0ZVNlc3Npb24SJS5ydW5tZS5ydW5uZXIudjIuRGVsZXRlU2Vzc2lvblJlcXVlc3QaJi5ydW5tZS5ydW5uZXIudjIuRGVsZXRlU2Vzc2lvblJlc3BvbnNlIgASaAoPTW9uaXRvckVudlN0b3JlEicucnVubWUucnVubmVyLnYyLk1vbml0b3JFbnZTdG9yZVJlcXVlc3QaKC5ydW5tZS5ydW5uZXIudjIuTW9uaXRvckVudlN0b3JlUmVzcG9uc2UiADABElIKB0V4ZWN1dGUSHy5ydW5tZS5ydW5uZXIudjIuRXhlY3V0ZVJlcXVlc3QaIC5ydW5tZS5ydW5uZXIudjIuRXhlY3V0ZVJlc3BvbnNlIgAoATABEmMKDlJlc29sdmVQcm9ncmFtEiYucnVubWUucnVubmVyLnYyLlJlc29sdmVQcm9ncmFtUmVxdWVzdBonLnJ1bm1lLnJ1bm5lci52Mi5SZXNvbHZlUHJvZ3JhbVJlc3BvbnNlIgBCyAEKE2NvbS5ydW5tZS5ydW5uZXIudjJCC1J1bm5lclByb3RvUAFaRmdpdGh1Yi5jb20vcnVubWVkZXYvcnVubWUvdjMvYXBpL2dlbi9wcm90by9nby9ydW5tZS9ydW5uZXIvdjI7cnVubmVydjKiAgNSUliqAg9SdW5tZS5SdW5uZXIuVjLKAg9SdW5tZVxSdW5uZXJcVjLiAhtSdW5tZVxSdW5uZXJcVjJcR1BCTWV0YWRhdGHqAhFSdW5tZTo6UnVubmVyOjpWMmIGcHJvdG8z", [file_google_protobuf_wrappers, file_runme_runner_v2_config]);

/**
 * Describes the message runme.runner.v2.Project.
 * Use `create(ProjectSchema)` to create a new message.
 */
export const ProjectSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 0);

/**
 * Describes the message runme.runner.v2.Session.
 * Use `create(SessionSchema)` to create a new message.
 */
export const SessionSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 1);

/**
 * Describes the message runme.runner.v2.CreateSessionRequest.
 * Use `create(CreateSessionRequestSchema)` to create a new message.
 */
export const CreateSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 2);

/**
 * Describes the message runme.runner.v2.CreateSessionRequest.Config.
 * Use `create(CreateSessionRequest_ConfigSchema)` to create a new message.
 */
export const CreateSessionRequest_ConfigSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 2, 0);

/**
 * Describes the enum runme.runner.v2.CreateSessionRequest.Config.SessionEnvStoreSeeding.
 */
export const CreateSessionRequest_Config_SessionEnvStoreSeedingSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v2_runner, 2, 0, 0);

/**
 * @generated from enum runme.runner.v2.CreateSessionRequest.Config.SessionEnvStoreSeeding
 */
export const CreateSessionRequest_Config_SessionEnvStoreSeeding = /*@__PURE__*/
  tsEnum(CreateSessionRequest_Config_SessionEnvStoreSeedingSchema);

/**
 * Describes the message runme.runner.v2.CreateSessionResponse.
 * Use `create(CreateSessionResponseSchema)` to create a new message.
 */
export const CreateSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 3);

/**
 * Describes the message runme.runner.v2.GetSessionRequest.
 * Use `create(GetSessionRequestSchema)` to create a new message.
 */
export const GetSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 4);

/**
 * Describes the message runme.runner.v2.GetSessionResponse.
 * Use `create(GetSessionResponseSchema)` to create a new message.
 */
export const GetSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 5);

/**
 * Describes the message runme.runner.v2.ListSessionsRequest.
 * Use `create(ListSessionsRequestSchema)` to create a new message.
 */
export const ListSessionsRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 6);

/**
 * Describes the message runme.runner.v2.ListSessionsResponse.
 * Use `create(ListSessionsResponseSchema)` to create a new message.
 */
export const ListSessionsResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 7);

/**
 * Describes the message runme.runner.v2.UpdateSessionRequest.
 * Use `create(UpdateSessionRequestSchema)` to create a new message.
 */
export const UpdateSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 8);

/**
 * Describes the message runme.runner.v2.UpdateSessionResponse.
 * Use `create(UpdateSessionResponseSchema)` to create a new message.
 */
export const UpdateSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 9);

/**
 * Describes the message runme.runner.v2.DeleteSessionRequest.
 * Use `create(DeleteSessionRequestSchema)` to create a new message.
 */
export const DeleteSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 10);

/**
 * Describes the message runme.runner.v2.DeleteSessionResponse.
 * Use `create(DeleteSessionResponseSchema)` to create a new message.
 */
export const DeleteSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 11);

/**
 * Describes the message runme.runner.v2.Winsize.
 * Use `create(WinsizeSchema)` to create a new message.
 */
export const WinsizeSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 12);

/**
 * Describes the message runme.runner.v2.ExecuteRequest.
 * Use `create(ExecuteRequestSchema)` to create a new message.
 */
export const ExecuteRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 13);

/**
 * Describes the message runme.runner.v2.ExecuteResponse.
 * Use `create(ExecuteResponseSchema)` to create a new message.
 */
export const ExecuteResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 14);

/**
 * Describes the message runme.runner.v2.ResolveProgramCommandList.
 * Use `create(ResolveProgramCommandListSchema)` to create a new message.
 */
export const ResolveProgramCommandListSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 15);

/**
 * Describes the message runme.runner.v2.ResolveProgramRequest.
 * Use `create(ResolveProgramRequestSchema)` to create a new message.
 */
export const ResolveProgramRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 16);

/**
 * Describes the enum runme.runner.v2.ResolveProgramRequest.Mode.
 */
export const ResolveProgramRequest_ModeSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v2_runner, 16, 0);

/**
 * @generated from enum runme.runner.v2.ResolveProgramRequest.Mode
 */
export const ResolveProgramRequest_Mode = /*@__PURE__*/
  tsEnum(ResolveProgramRequest_ModeSchema);

/**
 * Describes the enum runme.runner.v2.ResolveProgramRequest.Retention.
 */
export const ResolveProgramRequest_RetentionSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v2_runner, 16, 1);

/**
 * @generated from enum runme.runner.v2.ResolveProgramRequest.Retention
 */
export const ResolveProgramRequest_Retention = /*@__PURE__*/
  tsEnum(ResolveProgramRequest_RetentionSchema);

/**
 * Describes the message runme.runner.v2.ResolveProgramResponse.
 * Use `create(ResolveProgramResponseSchema)` to create a new message.
 */
export const ResolveProgramResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 17);

/**
 * Describes the message runme.runner.v2.ResolveProgramResponse.VarResult.
 * Use `create(ResolveProgramResponse_VarResultSchema)` to create a new message.
 */
export const ResolveProgramResponse_VarResultSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 17, 0);

/**
 * Describes the enum runme.runner.v2.ResolveProgramResponse.Status.
 */
export const ResolveProgramResponse_StatusSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v2_runner, 17, 0);

/**
 * @generated from enum runme.runner.v2.ResolveProgramResponse.Status
 */
export const ResolveProgramResponse_Status = /*@__PURE__*/
  tsEnum(ResolveProgramResponse_StatusSchema);

/**
 * Describes the message runme.runner.v2.MonitorEnvStoreRequest.
 * Use `create(MonitorEnvStoreRequestSchema)` to create a new message.
 */
export const MonitorEnvStoreRequestSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 18);

/**
 * Describes the message runme.runner.v2.MonitorEnvStoreResponseSnapshot.
 * Use `create(MonitorEnvStoreResponseSnapshotSchema)` to create a new message.
 */
export const MonitorEnvStoreResponseSnapshotSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 19);

/**
 * Describes the message runme.runner.v2.MonitorEnvStoreResponseSnapshot.SnapshotEnv.
 * Use `create(MonitorEnvStoreResponseSnapshot_SnapshotEnvSchema)` to create a new message.
 */
export const MonitorEnvStoreResponseSnapshot_SnapshotEnvSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 19, 0);

/**
 * Describes the message runme.runner.v2.MonitorEnvStoreResponseSnapshot.Error.
 * Use `create(MonitorEnvStoreResponseSnapshot_ErrorSchema)` to create a new message.
 */
export const MonitorEnvStoreResponseSnapshot_ErrorSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 19, 1);

/**
 * Describes the enum runme.runner.v2.MonitorEnvStoreResponseSnapshot.Status.
 */
export const MonitorEnvStoreResponseSnapshot_StatusSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v2_runner, 19, 0);

/**
 * @generated from enum runme.runner.v2.MonitorEnvStoreResponseSnapshot.Status
 */
export const MonitorEnvStoreResponseSnapshot_Status = /*@__PURE__*/
  tsEnum(MonitorEnvStoreResponseSnapshot_StatusSchema);

/**
 * Describes the message runme.runner.v2.MonitorEnvStoreResponse.
 * Use `create(MonitorEnvStoreResponseSchema)` to create a new message.
 */
export const MonitorEnvStoreResponseSchema = /*@__PURE__*/
  messageDesc(file_runme_runner_v2_runner, 20);

/**
 * Describes the enum runme.runner.v2.SessionEnvStoreType.
 */
export const SessionEnvStoreTypeSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v2_runner, 0);

/**
 * env store implementation
 *
 * @generated from enum runme.runner.v2.SessionEnvStoreType
 */
export const SessionEnvStoreType = /*@__PURE__*/
  tsEnum(SessionEnvStoreTypeSchema);

/**
 * Describes the enum runme.runner.v2.ExecuteStop.
 */
export const ExecuteStopSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v2_runner, 1);

/**
 * @generated from enum runme.runner.v2.ExecuteStop
 */
export const ExecuteStop = /*@__PURE__*/
  tsEnum(ExecuteStopSchema);

/**
 * Describes the enum runme.runner.v2.SessionStrategy.
 */
export const SessionStrategySchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v2_runner, 2);

/**
 * SessionStrategy determines a session selection in
 * an initial execute request.
 *
 * @generated from enum runme.runner.v2.SessionStrategy
 */
export const SessionStrategy = /*@__PURE__*/
  tsEnum(SessionStrategySchema);

/**
 * Describes the enum runme.runner.v2.MonitorEnvStoreType.
 */
export const MonitorEnvStoreTypeSchema = /*@__PURE__*/
  enumDesc(file_runme_runner_v2_runner, 3);

/**
 * @generated from enum runme.runner.v2.MonitorEnvStoreType
 */
export const MonitorEnvStoreType = /*@__PURE__*/
  tsEnum(MonitorEnvStoreTypeSchema);

/**
 * @generated from service runme.runner.v2.RunnerService
 */
export const RunnerService = /*@__PURE__*/
  serviceDesc(file_runme_runner_v2_runner, 0);

